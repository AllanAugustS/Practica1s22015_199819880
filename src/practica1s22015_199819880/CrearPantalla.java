/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package practica1s22015_199819880;


import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author allan
 */
public class CrearPantalla extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form CrearPantalla
     * @param ancho
     * @param alto
     * @param imagen
     */
    
     private final Tablero tablero;
     private final ListaCatalogoObjetos cobjetos;
     private final PilaListaCatalogo pila;
     private final ColaListaCatalogo cola;
     private int totalObjetos,cantObjetos;
     private Objetos lblobjetos;
     private Matriz matriz;
     private Thread hilo1;
    
    public CrearPantalla(int ancho, int alto, String imagen, ListaCatalogoObjetos cobjetos ) {
        initComponents();
        tablero = new Tablero(alto, alto, imagen);
        this.add(tablero);
        this.cobjetos = cobjetos;
        this.pila = new PilaListaCatalogo();
        this.cola = new ColaListaCatalogo();
        this.totalObjetos = Integer.parseInt(cobjetos.Cabeza.getSiguiente().getNombre());
        this.cantObjetos = 0;
        this.matriz = new Matriz();
        matriz.insertarColumnas(ancho, alto);
        matriz.cabeceras();
        this.insertarPrimeros();
        this.agregarObjetos();
        hilo1 = new Thread(this);
        hilo1.start();
    }

    public void hilo(){
    
        int objetos = cobjetos.getCantidad();
        
        int num1 =(int)Math.floor(Math.random()*(objetos-0+1)+0);
        if(cantObjetos<totalObjetos){
        NodoCatalogoObjetos nodo = cobjetos.Cabeza;
        for(int j=1; j<num1;j++){
        nodo = nodo.getSiguiente();
        
        }
        cantObjetos++;
        cola.inserta(nodo.getImagen(), nodo.getNombre());
        }
    this.remove(lblobjetos);
    this.agregarObjetos();
    this.repaint();
    }
    
    public void insertarPrimeros(){
    
    int Objetos = cobjetos.getCantidad();
    
    for(int i=0; i<5; i++){
       int num1 = (int) Math.floor(Math.random()*(Objetos-0+1)+0);
       if(cantObjetos<totalObjetos){
       NodoCatalogoObjetos nodo = cobjetos.Cabeza;
       for(int j=1; j<num1; j++){
          nodo = nodo.getSiguiente();
       }
       cantObjetos++;
       cola.inserta(nodo.getImagen(), nodo.getNombre());
       }
    
    }
    
    }
    
    public void agregarObjetos(){
    
    lblobjetos = new Objetos(cola);
    this.add(lblobjetos);
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void pausa(java.awt.event.KeyEvent evt){
    if(KeyEvent.VK_ENTER == evt.getKeyCode()){
    
       new PausarJuego(this, true, cobjetos,pila,cola, matriz).setVisible(true);
    }
    
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while(true){
        this.hilo();
        try{
          Thread.sleep(5000);
        }catch (InterruptedException ex){
            Logger.getLogger(CrearPantalla.class.getName()).log(Level.SEVERE,null,ex);
        }
        }
    }
}
